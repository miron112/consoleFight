using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleFight
{
    public enum Rarity
    {
        Common,
        Uncommon,
        Rare, 
        Epic,    
        Legendary  
    }
    abstract class Item
    {
        public string Name { get; set; }
        protected int _durability;
        public Rarity ItemRarity;


        public virtual void Break()
        {
            _durability--;
            if ( _durability == 0 )
            {
                Console.WriteLine($"{Name} сломалась!");

            }
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleFight
{
    abstract class Armor : Item
    {
        public int Defense;

    }

    public class Shield : Armor
    {
        public int BlockChance;

        public override void Break()
        {
            base.Break();
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace ConsoleFight
{
    abstract class Weapon : Item 
    {
        public float Damage;
    }
    public class Bow : Weapon
    {
        private int _arrowcount = 5;

        public override void Break()
        {
            base.Break();
        }

        public void ShootArrow()
        {
            if (_arrowcount == 0)
            {
                _arrowcount--;
                Console.WriteLine($"Выпущена стрела! Осталось: {_arrowcount}");
            }
            else
            {
                Console.WriteLine("стрел нет)");
            }
        }

        public void AddArrow()
        {
            this._arrowcount++;
        }
    }
}
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Net.Mime.MediaTypeNames;

namespace ConsoleFight
{
    public class Hero
    {
        public string Name;
        private float _health;
        private int _level = 1;
        private int _experience = 0;
        private Weapon _weapon;
        private Armor _armor;
        
        public void Attack(Hero Enemu)
        {
            int DeltaDamage = (int)Math.Max(0, this._weapon.Damage - (Enemu._armor.Defense / 2));

            Enemu.TakeDamage(DeltaDamage);
            if(this._weapon is Bow bow)
            {
                bow.ShootArrow();
            }
            this._weapon.Break();
        }

        public void TakeDamage(float Damage) 
        {
            _health -= Damage;

            if (_health <= 0)
            {
                _health = 0;
                Console.WriteLine($"{Name} погибает...");
            }
            this._armor.Break();
        }


        public void EquipWeapon(Weapon weapon)
        {
            if (_weapon != null)
            {
                Console.WriteLine($"у тебя есть оружие {this._weapon.Name})");
            }
            else
            {
                this._weapon = weapon;
                Console.WriteLine("у тебя теперь есть оружие {this._weapon.Name})");
            }

        }

        public void EquipArmor(Armor armor)
        {
            if (armor != null)
            {
                Console.WriteLine("у тебя есть броня");
            }
            else
            {
                this._armor = armor;
                Console.WriteLine($"у тебя теперь есть броня {this._armor.Name}");
            }
        }
        public void ShowStatus()
        {
            Console.WriteLine($"{Name} (Ур. {_level})");
            Console.WriteLine($"Здоровье: {_health}");
            Console.WriteLine($"Оружие: {_weapon?.Name ?? "Нет"}");
            Console.WriteLine($"Броня: {_armor?.Name ?? "Нет"}");
        }

    }
}
